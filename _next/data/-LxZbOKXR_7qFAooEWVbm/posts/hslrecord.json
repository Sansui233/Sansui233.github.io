{"pageProps":{"meta":{"title":"m3u8直播流实时录屏小记","date":"2021-05-12 08:00","tags":["经验"],"categories":"乱七八糟的分享","description":null,"keywords":"web, m3u8, hsl, 扒视频"},"mdxcode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    hr: \"hr\",\n    img: \"img\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    pre: \"pre\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"最近由于发现自己想回看的直播会被剪镜头，所以下定决心以后要学会录屏。但本人有强迫症，一般的录屏软件满足不了我的需要，主要是：\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"会录出鼠标操作、网络卡顿、水印等影响观感的画面\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"由于显示器和录屏软件的和原视频帧数可能不同步的问题，非常容易造成画面卡顿\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"体积远大于原视频，二压后画质失真重\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"通常来讲，能拿直播时的视频流就别真的屏幕录制。本来视频分段就都在缓存里，应该是有比较容易实现的办法做到实时保存的才对。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"本文主要分为以下三个部分\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"m3u8简介\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"保存视频分段与合并\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"DRM 版权保护问题\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"m3u8简介\",\n      children: \"m3u8简介\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"目前的各大流媒体平台视频（不管是直播还是回放）大多都会把视频切片为很小一段，长度可能10s左右，通常是.ts后缀的文件。而这一堆.ts文件的索引文件为m3u8文件。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"一个通常的m3u8文件是如下格式\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-text\",\n        children: \"#EXTM3U\\n#EXT-X-VERSION:3\\n#EXT-X-TARGETDURATION:10\\n#EXT-X-MEDIA-SEQUENCE:0\\n#EXTINF:10.000000,\\n#EXT-X-PRIVINF:FILESIZE=3192240\\nhttps://website/xxx-00001.ts\\n#EXTINF:10.000000,\\n#EXT-X-PRIVINF:FILESIZE=3206904\\nhttps://website/xxx-00002.ts\\n#EXTINF:10.000000,\\n#EXT-X-PRIVINF:FILESIZE=2576164\\nhttps://website/xxx-00003.ts\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"也就是说，如果我们实时保存流媒体平台的视频，正常情况下，会保存一个.m3u8索引文件，和一堆.ts文件。有了这些文件我们可以直接使用支持m3u8的播放器（如IINA、VLC）进行播放。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"m3u8是 HLS(HTTP Live Stream) HTTP直播流格式的基础。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"保存视频分段与合并为mp4\",\n      children: \"保存视频分段与合并为MP4\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"工具准备：\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://www.ffmpeg.org/\",\n          children: \"ffmpeg\"\n        }), \"：强大的命令行视频处理工具，网上有很多安装教程，这里不重复\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://chrome.google.com/webstore/detail/%E7%8C%AB%E6%8A%93/jfedfbgedapdagkghmgibemcoggfppbb\",\n          children: \"Chrome插件-猫抓\"\n        }), \"：资源嗅探插件，下载需要科学上网\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"一个多线程的下载器（为了下载速度更快），如 aria2，网上有很多教程，这里不重复\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"一个支持\", _jsx(_components.strong, {\n          children: \"使用正则表达式批量替换文字\"\n        }), \"的txt编辑器，如sublime、vscode\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"以上方法会比较硬核，傻瓜式的方法可只准备下面这一个\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://www.hlsloader.com/\",\n          children: \"Chrome插件-Stream Recorder\"\n        }), \"：傻瓜式HLS一键保存插件，下载需要科学上网\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"方法一：下载所有分段并合并（稍硬核）\",\n      children: \"方法一：下载所有分段并合并（稍硬核）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"首先打开一个视频网站，这里以优酷的综艺为例。\\n打开后点击右上角的猫抓插件，会看到一个m3u8文件，和一堆ts文件。\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240.png\",\n      alt: \"猫抓.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"首先我们可以先点下载按钮下载到本地 .m3u8 文件。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"猫抓插件提供了对m3u8的解析，点击文件旁的放大镜就可以看见。\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174624858.png\",\n      alt: \"image.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"复制所有的内容，放到支持多线程的下载器里下载。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"下载完成后，先整理一下本地的文件目录成如下\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174641967.png\",\n      alt: \"本地文件\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"（为了看起来更清晰，以上各个文件名我已修改）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"然后修改m3u8文件。我这里使用的编辑器是vs code。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"m3u8文件里的原链接是这样的：\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-text\",\n        children: \"https://valipl-vip.cp31.ott.cibntv.net/67756D6080932713CF4E/0300609724C6163EBF1C35DAC076221D-4673-49D8-A932-70FA-00001.ts?ccode=0502&duration=6237&expire=18000&psid=28ae2c9bf869cf6f9ae28c814098b5fe43346&ups_client_netip=3b4081be&ups_ts=1620641730&ups_userid=300380294&utid=Xd0WGHofZhACAXtwDp2%2BGj22&vid=XNTE0MDg5MTgyOA&sm=1&operate_type=1&dre=u38&si=78&eo=0&dst=1&iv=1&s=cbcad844c5894d209b9f&type=mp4hd3v3&bc=2&hotvt=1&t=d91e686d230165f&cug=1&rid=20000000DC17B06335EBB96917703D4A6B2DA12102000000&vkey=B84707ca23f9e5899f9b0b9d97e4d1851\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"非常的长。我们首先要做的，是去掉每一行 \", _jsx(_components.code, {\n        children: \"?\"\n      }), \" 之后的所有字符。使用正则表达式批量替换，在查询里输入\", _jsx(_components.code, {\n        children: \"\\\\?.*?\\\\n\"\n      }), \"，替换为 \", _jsx(_components.code, {\n        children: \"\\\\n\"\n      }), \" 。注意要勾选正则表达式的符号。\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174711034.png\",\n      alt: \"replace query\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"然后要替换的是\", _jsx(_components.code, {\n        children: \"https://...\"\n      }), \"内容，替换为本地的文件路径，让最后的剩下文件名指向本地的文件。\"]\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174718097.png\",\n      alt: \"替换本地文件.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"替换后的.m3u8文件是这样的\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174727634.png\",\n      alt: \"m3u8文件\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"此时可以使用支持m3u8的播放器打开m3u8文件，观看是视频能否正常播放。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"能正常播放后，使用ffmpeg合并为mp4，不用转码速度就很快\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-shell\",\n        children: \"ffmpeg -i index.m3u8 -vcodec copy -acodec copy output.mp4\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"完成\"\n    }), \"\\n\", _jsx(_components.h4, {\n      id: \"缺点\",\n      children: \"缺点\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"对于回放的完整视频文件，通常会提供m3u8索引文件，但对于直播通常是没有m3u8索引的。这时候依然可以按上述方法下载所有分段，用ffmpeg进行合并。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"但是直播时无法一次获取到所有ts的链接，而是边播边给。就算猫抓能批量复制链接，但为了防止直播时出什么意外（比如浏览器无响应了、突然断电），看一会儿就得存，无法好好享受直播，最后上千个文件的列表，也变得很麻烦。\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"使用-stream-recorder插件-傻瓜式保存\",\n      children: \"使用 Stream-Recorder插件 傻瓜式保存\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"上一个方法的所有步骤，其实都能用这个插件搞定\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.a, {\n          href: \"https://www.hlsloader.com/\",\n          children: \"Chrome插件-Stream Recorder\"\n        }), \"：傻瓜式HLS一键保存插件，下载需要科学上网\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"使用上也很简单。视频播放开始后，点击这个按钮就行了，自动保存视频分段，同时合并为一个mp4。\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174735807.png\",\n      alt: \"Stream Recorder.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"简单介绍一下，这个插件主要有三个模式\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Live：实时获取直播时的ts分段，可以没有索引文件自动合并\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"HLS：看回放时获取ts分段，可以没有索引文件自动合并。但是像B站这种用m4s非标准HLS的似乎用不了。\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Capture：实时获取正在播放的HLS，直播回放均可，大部分视频格式都能用，兼容性最好。缺点是真的要一直播着。\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"也就是直播时使用Live抓取或Capture录屏，且可以自动合并视频音频，相当于直播时边看边存。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"看回放时使用HLS或Capture保存视频。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"drm-版权保护问题\",\n      children: \"DRM 版权保护问题\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"并不是所有的m3u8视频都能这么下载，有的经过了DRM(Digital rights management)的保护。这样的视频下载下来也是无法直接合并的。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有版权保护的视频，使用猫抓查看m3u8解析时，可以发现这么一行\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://cdn.jsdelivr.net/gh/NamiLing/upic/uPic/1240-20210512174747126.png\",\n      alt: \"DRM m3u8.png\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Stream Recorder 也不支持加密视频的下载。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"解密不在讨论范围内（我也不会），总得来说还是尽量支持正版。\"\n    }), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.p, {\n      children: \"PS：目前风气真的太严了，如果不是发现片段被删减，也不会想到去研究怎么录屏。既然花了钱买了相应的单场直播，也说明了会提供回放，要求拥有一个和直播时相同的回放个人觉得并不过分。最终给一个删减版，感觉这服务有些不值得，即便直播和录屏混剪都得给剪出来一个完整的版本。\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerpt":" 最近由于发现自己想回看的直播会被剪镜头，所以下定决心以后要学会录屏。但本人有强迫症，一般的录屏软件满足不了我的需要，主要是：  1. 会录出鼠标操作、网络卡顿、水印等影响观感的画面 2. 由于显示器和录屏软件的和原视频帧数可能不同步的问题，非常容易造成画面卡顿 3. 体积远大于原视频，","prevPost":{"title":"网盘目录程序比较","link":"/posts/网盘目录程序比较"},"nextPost":{"title":"记一次被骗388巨款的经历","link":"/posts/记录一次被骗388巨款的经历"},"headings":[{"title":"m3u8简介","rank":1,"id":"m3u8简介"},{"title":"保存视频分段与合并为MP4","rank":1,"id":"保存视频分段与合并为mp4"},{"title":"方法一：下载所有分段并合并（稍硬核）","rank":2,"id":"方法一：下载所有分段并合并（稍硬核）"},{"title":"使用 Stream-Recorder插件 傻瓜式保存","rank":2,"id":"使用-stream-recorder插件-傻瓜式保存"},{"title":"DRM 版权保护问题","rank":1,"id":"drm-版权保护问题"}]},"__N_SSG":true}