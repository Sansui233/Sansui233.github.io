{"pageProps":{"meta":{"title":"Windows11 右键菜单自定义 - NileSoft Shell","date":"2025-04-19 09:21","tags":["Windows"],"categories":"工具","description":"颜狗就是得样式和功能性全要，怎么了"},"mdxcode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    img: \"img\",\n    p: \"p\",\n    pre: \"pre\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"（发现简中圈居然没有人写这个事，写个草稿发别的地方）\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Windows11 右键菜单问题被诟病已有，网上很多还原为 win10 菜单的教程……但 win10 有 win10 的问题，有用的没用的都往里放，常用的不常用的混在一起。有没有一种方法可以兼顾好看，同时有合理的菜单层级呢？\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"有的 —— Nilesoft Shell。可以自定义的 Win11 右键菜单。已经用了两年多了很好用（以至于差点忘了有这个软件）。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"下载并安装\",\n      children: \"下载并安装\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"下载在官网： \", _jsx(_components.a, {\n        href: \"https://nilesoft.org/\",\n        children: \"https://nilesoft.org/\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"安装完后，新菜单应该已经生效了，并且会开机自启。这时候可以点点看，如果感觉效果满意就不用再看下去了。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"当然颜狗是不满意的，大部分一级菜单我用不上，我只想保留我常用的，不用的塞到更多选项。如图\"\n    }), \"\\n\", _jsx(_components.img, {\n      src: \"https://img-cf.sansui233.com/imgs/2025/04/202504190843358.webp\",\n      alt: \"\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"挪动菜单层级\",\n      children: \"挪动菜单层级\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"如果你是默认安装，\", _jsx(_components.code, {\n        children: \"C:\\\\Program Files\\\\Nilesoft Shell\"\n      }), \" 应该能看见以下的文件结构\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"Nilesoft Shell/\\r\\n├── shell.exe\\r\\n├── shell.nss\\r\\n├── imports/\\r\\n│   ├── modify.nss\\r\\n│   └── ...\\r\\n└── ...\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"以 \", _jsx(_components.code, {\n        children: \".nss\"\n      }), \" 结尾的是配置文件，可以用记事本打开。以下是几个案例：\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"1.-收纳不常用菜单至-“更多选项”\",\n      children: \"1. 收纳不常用菜单至 “更多选项”\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"例如，收纳所有名称里带有 “QQ” 和 “百度” 的菜单项，在 \", _jsx(_components.code, {\n        children: \"modify.nss\"\n      }), \" 添加如下：\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"modify(mode=mode.multiple find=\\\"QQ|百度|网盘\\\" menu=title.more_options)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"find 中包含的字符串会被匹配，“|”是或。表示匹配“QQ”或“百度”或“网盘”的任意项都会被挪走。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这是主要的挪菜单的方式，我实际上挪了一大堆。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"modify(mode=mode.multiple\\r\\n\\tfind=\\\"收藏夹|打印|共享|PowerRename|Microsoft Defender|Change Attributes|File Locksmith|upic|火绒|百度|QQ|Acrobat|Adobe|OneDrive|在沙盒中运行|PicList|旧版 Windows Media Player\\\"\\r\\n\\tmenu=title.more_options)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"2.-“创建快捷方式”挪到顶层\",\n      children: \"2. “创建快捷方式”挪到顶层\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"有人可能看不惯 创建快捷方式 放在了 更多选项 里。要恢复把 \", _jsx(_components.code, {\n        children: \"modify.nss\"\n      }), \" 中一行注释掉就好。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"modify(mode=mode.multiple\\r\\n\\twhere=this.id(\\r\\n\\t\\tid.send_to,\\r\\n\\t\\tid.share,\\r\\n\\t\\t// id.create_shortcut, 这行注释掉\\r\\n\\t\\tid.set_as_desktop_background,\\r\\n\\t\\tid.rotate_left,\\r\\n\\t\\t...\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"3.-顶层添加新菜单项-“使用-vscode-打开”\",\n      children: \"3. 顶层添加新菜单项 “使用 vscode 打开”\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在 \", _jsx(_components.code, {\n        children: \"shell.nss\"\n      }), \" 中，新起一行添加\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"item(title='Open with VS Code' image=[\\\\uE272, #22A7F2] cmd='code' args='\\\"@sel.path\\\" && exit' sep='top')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"添加的这行可以不在最后，添加的位置决定它在菜单中的位置。我添加在了中间，最后的几个 \\\"import\\\" 之间。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"要是问为什么我不用 vscode 自带的右键菜单……我的 vscode 装得太早了，那时还没有右键菜单关联，现在也懒得再装了就将就用吧……\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"4.-顶层菜单添加新目录\",\n      children: \"4. 顶层菜单添加新目录\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"你要是在图片上右键，会发现系统自带有“使用 Windows 画图编辑”“使用照片编辑”“向左旋转”“向右旋转”……我的天，哪个天才设计的，你不知道自家照片 App 打开后能编辑也能旋转吗？（我知道这肯定是两波人开发的但还是想吐槽）\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"秉持着只挪不删的原则，在“更多选项”前加了个“编辑”目录。以下加在了 \", _jsx(_components.code, {\n        children: \"shell.nss\"\n      })]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"menu(mode=\\\"multiple\\\" title=\\\"编辑\\\" image=image.glyph(\\\"\\\\uE0A1\\\"))\\r\\n{\\r\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"然后在 \", _jsx(_components.code, {\n        children: \"modify.nss\"\n      }), \" 里加了\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"modify(mode=mode.multiple\\r\\n\\tfind=\\\"*编辑|旋转|PDF\\\"\\r\\n\\tmenu=\\\"编辑\\\")\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"这样等于说，编辑和旋转相关都被归到了新的“编辑”目录下。加上 PDF 相关操作挪进去。我没有装 WPS，装了 WPS 也可以把 WPS 挪一个目录。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"生效\",\n      children: \"生效\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"管理员权限运行安装目录下的 \", _jsx(_components.code, {\n        children: \"shell.exe\"\n      }), \"，点 Register 生效\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"其他\",\n      children: \"其他\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"按 shift 后右键菜单，会有一个“Developer” 目录。没错 shift 显示隐藏菜单也可以实现，配置的属性有 \", _jsx(_components.code, {\n        children: \"vis=key.shift()\"\n      }), \" ，但不是实时变化的所以没有mac 上的好用。除此之外还有喜闻乐见的能配置主题、颜色、图标等……我不管了。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"参考\",\n      children: \"参考\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"官网的文档很详细，但是非常面向程序员。不过大部分的需求被人在论坛上问过了，也有人在 issue 里问。不会就去论坛翻一下。看不懂英文开翻译，看不懂文档丢给 AI。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"文档： \", _jsx(_components.a, {\n        href: \"https://nilesoft.org/docs\",\n        children: \"https://nilesoft.org/docs\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"论坛： \", _jsx(_components.a, {\n        href: \"https://github.com/moudey/Shell/discussions\",\n        children: \"https://github.com/moudey/Shell/discussions\"\n      })]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerpt":" （发现简中圈居然没有人写这个事，写个草稿发别的地方）  Windows11 右键菜单问题被诟病已有，网上很多还原为 win10 菜单的教程……但 win10 有 win10 的问题，有用的没用的都往里放，常用的不常用的混在一起。有没有一种方法可以兼顾好看，同时有合理的菜单层级呢？  有","prevPost":{"title":"Title","link":"/posts/2025-04-22-techs-about-steam-crack"},"nextPost":{"title":"2024 年的总结与分享","link":"/posts/2025-01-05-2024-summary"},"headings":[{"title":"下载并安装","rank":1,"id":"下载并安装"},{"title":"挪动菜单层级","rank":1,"id":"挪动菜单层级"},{"title":"1. 收纳不常用菜单至 “更多选项”","rank":2,"id":"1.-收纳不常用菜单至-“更多选项”"},{"title":"2. “创建快捷方式”挪到顶层","rank":2,"id":"2.-“创建快捷方式”挪到顶层"},{"title":"3. 顶层添加新菜单项 “使用 vscode 打开”","rank":2,"id":"3.-顶层添加新菜单项-“使用-vscode-打开”"},{"title":"4. 顶层菜单添加新目录","rank":2,"id":"4.-顶层菜单添加新目录"},{"title":"生效","rank":1,"id":"生效"},{"title":"其他","rank":1,"id":"其他"},{"title":"参考","rank":1,"id":"参考"}]},"__N_SSG":true}