{"pageProps":{"meta":{"title":"Windows 命令行相关配置之 msys2+zsh+zi","date":"2024-03-16 04:35","tags":["Windows"],"categories":"工具","keywords":"Windows命令行, Windows调整，Windows设置, powershell,msys2,zshell"},"mdxcode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    li: \"li\",\n    p: \"p\",\n    pre: \"pre\",\n    span: \"span\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"长久以来，遇到 bash 脚本会临时切 git-bash 中的 bash。由于用的语言都有自己的包管理器，倒也一直够用。但是最近涉及到一些 c++，由 git-bash 提供的最小化环境东西缺得太多，几乎不能当个日常 shell 用，也没有 pacman 包管理，最后决定还是单独安装 msys2。\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"git-bash 和 msys2 同时安装不会冲突。msys2 是独立的 home 目录，而 git-bash 是与 windows 当前用户通用的。我本来想卸载 git-bash，但由于我现在还是用 powershell，最终发现 git-bash 不能卸载。一是 posh-git 只支持 git-bash 的 git；其次是，astro-nvim 中的一些插件需要 \", _jsx(_components.code, {\n        children: \"git.exe\"\n      }), \" 在环境变量下，使用 alias 链接的 git 不行，而手动加环境变量会把 git 以外的程序也加进去，造成 msys2 的工具与 powershell 本身工具的冲突。\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"想来想去，决定保留 git-bash 到最小化的状态，当成 powershell 的插件用。unix-like shell 以及相应的包管理还是 msys2。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"安装-msys2\",\n      children: \"安装 msys2\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"见 \", _jsx(_components.a, {\n        href: \"https://www.msys2.org/\",\n        children: \"https://www.msys2.org/\"\n      }), \" 。安装过程没什么好说的，唯一要注意的在于安装目录的权限必须是当前用户可以完全控制，否则后续各种包的安装都会有一大堆问题。如果因为强迫症安装到 Program Files 下，则需要手动添加当前用户的权限。\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"软链接问题\",\n      children: \"软链接问题\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"windows 的软链接本来也是个很麻烦的问题。到 msys2 下，还多了一个软链接方式兼容问题。msys2 默认是 \", _jsx(_components.code, {\n        children: \"ln -s\"\n      }), \" 是复制，要用 windows 风格的软链接，可以改安装目录下的各种 \", _jsx(_components.code, {\n        children: \".ini\"\n      }), \" 文件中的配置。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"MSYS=\\\"winsymlinks:lnk\\\"\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"zsh-+-zi\",\n      children: \"zsh + zi\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"zsh-的安装\",\n      children: \"zsh 的安装\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-bash\",\n        children: \"pacman -S zsh\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"老实说个人觉得和 linux 上的 zsh 相比还是差了一大截，用起来和 bash 感觉差不多。只是 zsh 插件管理的选择比较多\"\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"zi-的安装\",\n      children: \"zi 的安装\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"关于 zsh 插件管理，之前在 git-bash 上我也安装了 oh-my-zsh，但是环境原因，遇到的 bug 着实太多，基本不用。另外，最大的问题是启动太慢，每次启动长达 10 秒。我分析了一下初始化脚本的执行时长，发现拖慢速度的罪魁祸首是初始化命令补全（就不能异步吗啊！）当然用 mac 时 omz 也有点慢，但显然没有 msys2 里这么离谱。\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"下午吐槽这个事情后，Antarx 说他换 zi 了。我试了下，确实很快，从没超过3s，令人偷税。\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"zi 的安装：\", _jsx(_components.a, {\n          href: \"https://wiki.zshell.dev/docs/getting_started/installation\",\n          children: \"https://wiki.zshell.dev/docs/getting_started/installation\"\n        })]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"安装过程最好在 msys2 的 GUI 终端下进行，因为需要登录的默认目录是在 home 的当前用户下。但这里又有另一个问题 —— msys2 不带 git。如果系统有另外安装 git，想复用，可以 cmd 启动 zsh，不指定启动的目录，指定继承环境变量。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-cmd\",\n        children: \"C:\\\\\\\\msys64\\\\\\\\msys2_shell.cmd -defterm -no-start -mingw64 -use-full-path -shell zsh\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"zi-的配置与插件\",\n      children: \"zi 的配置与插件\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.a, {\n        href: \"https://wiki.zshell.dev/docs/getting_started/installation\",\n        children: \"安装Wiki\"\n      }), \" 在不断更新，检查最新版的安装方法。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"安装好后，\", _jsx(_components.code, {\n        children: \".zshrc\"\n      }), \" 里添加如下，写好重启 zsh 即可。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-bash\",\n        children: [\"$ vi ~/.zshrc\\r\\n\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# zsh\"\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"setopt\"\n        }), \" AUTO_PUSHD\\r\\n\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"export\"\n        }), \" CLICOLOR=1\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"export\"\n        }), \" LSCOLORS=ExGxFxdaCxDaDahbadeche\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"zstyle\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"':completion:*'\"\n        }), \" list-colors \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"\\\"\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"${(@s.:.)LS_COLORS}\"\n          }), \"\\\"\"]\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"alias\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"ls\"\n        }), \"=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'ls --color=auto'\"\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"alias\"\n        }), \" la=\", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"'la --color=auto'\"\n        }), \"\\r\\n\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# zi\"\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"typeset\"\n        }), \" -A ZI\\r\\nZI[BIN_DIR]=\", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"\\\"\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"${HOME}\"\n          }), \"/.zi/bin\\\"\"]\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"source\"\n        }), \" \", _jsxs(_components.span, {\n          className: \"hljs-string\",\n          children: [\"\\\"\", _jsx(_components.span, {\n            className: \"hljs-variable\",\n            children: \"${ZI[BIN_DIR]}\"\n          }), \"/zi.zsh\\\"\"]\n        }), \"\\r\\n\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-built_in\",\n          children: \"autoload\"\n        }), \" -Uz _zi\\r\\n(( \", _jsx(_components.span, {\n          className: \"hljs-variable\",\n          children: \"${+_comps}\"\n        }), \" )) && _comps[zi]=_zi\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# source <(curl -sL init.zshell.dev); zzinit\"\n        }), \"\\r\\n\\r\\n\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 插件\"\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 提前运行一次 zi ice pick\\\"async.zsh\\\" src\\\"pure.zsh\\\"\"\n        }), \"\\r\\nzi light sindresorhus/pure \\r\\nzi light agkozak/zsh-z  \", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 不能用 eval \\\"$(zoxide init zsh)\\\" 会冲突\"\n        }), \"\\r\\nzi snippet OMZP::git\\r\\nzi light zsh-users/zsh-completions\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 提前运行一次 zi ice wait lucid atload'_zsh_autosuggest_start'\"\n        }), \"\\r\\nzi light zsh-users/zsh-autosuggestions \\r\\n\", _jsx(_components.span, {\n          className: \"hljs-comment\",\n          children: \"# 提前运行一次 zi ice wait lucid atinit='zpcompinit'\"\n        }), \"\\r\\nzi light zdharma/fast-syntax-highlighting\\r\\n\\r\\n\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"windows-terminal-设置\",\n      children: \"Windows Terminal 设置\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"在设置里改 json，加相应的 profile。可以使用 \", _jsx(_components.code, {\n        children: \"-use-full-path\"\n      }), \" 继承 windows 系统的环境变量。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"commandline\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"C:\\\\\\\\msys64\\\\\\\\msys2_shell.cmd -defterm -here -no-start -mingw64 -use-full-path -shell zsh\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"guid\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"{c420e0af-28d9-4742-a6b8-83d5fcf424e9}\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"icon\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"C:\\\\\\\\msys64\\\\\\\\mingw64.ico\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"msys2 zsh\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"startingDirectory\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"%USERPROFILE%\\\"\"\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"vscode-terminal-设置\",\n      children: \"Vscode Terminal 设置\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"terminal.integrated.profiles.windows\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"MSYS2 zsh\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\r\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"path\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"C:\\\\\\\\msys64\\\\\\\\msys2_shell.cmd\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"args\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"[\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"-defterm\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"-here\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"-no-start\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"-mingw64\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"-use-full-path\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"-shell\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"zsh\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"]\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"env\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"MSYSTEM\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"MINGW64\\\"\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n        \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"overrideName\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-literal\",\n          children: _jsx(_components.span, {\n            className: \"hljs-keyword\",\n            children: \"true\"\n          })\n        }), \"\\r\\n    \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\r\\n\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"mintty-设置\",\n      children: \"Mintty 设置\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Mintty 是 msys2 里默认的终端 GUI，默认 shell 是 bash。修改 \", _jsx(_components.code, {\n        children: \"mingw64.ini\"\n      }), \" 为如下内容。\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"MSYS=winsymlinks:lnk\\r\\nMSYS2_PATH_TYPE=inherit\\r\\nMSYSTEM=MINGW64\\r\\nSHELL=/usr/bin/zsh\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"npm设置\",\n      children: \"npm设置\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果有使用 npm 进行包管理，继承自环境变量的 npm 补全时会报错。需要设置为\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-shell\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-meta prompt_\",\n          children: \"$ \"\n        }), _jsx(_components.span, {\n          className: \"bash\",\n          children: \"npm config edit\"\n        }), \"\\r\\nscript-shell=C:\\\\msys64\\\\usr\\\\bin\\\\bash.exe\\r\\nshell=C:\\\\msys64\\\\msys2\\\\usr\\\\bin\\\\bash.exe # 重要\\r\", _jsx(_components.span, {\n          className: \"hljs-meta prompt_\",\n          children: \"\\n$ \"\n        }), _jsx(_components.span, {\n          className: \"bash\",\n          children: \"npm config list\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"conda-设置\",\n      children: \"conda 设置\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果有使用 conda 进行 python 开发，继承自环境变量的 conda 默认初始化脚本也有问题……从 Github 上查到的解决方法……\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-shell\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-meta prompt_\",\n          children: \"# \"\n        }), _jsx(_components.span, {\n          className: \"bash\",\n          children: \">>> conda initialize >>>\"\n        }), \"\\r\", _jsx(_components.span, {\n          className: \"hljs-meta prompt_\",\n          children: \"\\n# \"\n        }), _jsxs(_components.span, {\n          className: \"bash\",\n          children: [\"!! Contents within this block are managed by \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"'conda init'\"\n          }), \" !!\"]\n        }), \"\\r\\nif [ -f '/c/Users/me/miniconda3/Scripts/conda.exe' ]; then\\r\\n    #eval \\\"$('/c/Users/me/miniconda3/Scripts/conda.exe' 'shell.zsh' 'hook')\\\"\\r\\n    eval \\\"$('/c/Users/me/miniconda3/Scripts/conda.exe' 'shell.zsh' 'hook' | sed -e 's/\\\"$CONDA_EXE\\\" $_CE_M $_CE_CONDA \\\"$@\\\"/\\\"$CONDA_EXE\\\" $_CE_M $_CE_CONDA \\\"$@\\\" | tr -d \\\\x27\\\\\\\\r\\\\x27/g')\\\"\\r\\nfi\\r\", _jsx(_components.span, {\n          className: \"hljs-meta prompt_\",\n          children: \"\\n# \"\n        }), _jsxs(_components.span, {\n          className: \"bash\",\n          children: [\"<<< \", _jsx(_components.span, {\n            className: \"hljs-string\",\n            children: \"conda initialize <<<\"\n          })]\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      id: \"ssh配置共用\",\n      children: \"ssh配置共用\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"如果有多个 ssh 账户的密钥，最好是软链接一下配置目录。注意需要前面的修改软链接方式，否则还是去资源管理器手动软链接吧。\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"hljs language-shell\",\n        children: \"ln -s /c/Users/me/.ssh ~/.ssh\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"参考\",\n      children: \"参考\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://hustlei.github.io/2018/11/msys2-for-win.html#%E5%AE%89%E8%A3%85git%E5%92%8Cvim\",\n        children: \"msys2-for-win\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.a, {\n        href: \"https://sdl.moe/post/zsh-conf/\",\n        children: \"https://sdl.moe/post/zsh-conf/\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerpt":" 长久以来，遇到 bash 脚本会临时切 git-bash 中的 bash。由于用的语言都有自己的包管理器，倒也一直够用。但是最近涉及到一些 c++，由 git-bash 提供的最小化环境东西缺得太多，几乎不能当个日常 shell 用，也没有 pacman 包管理，最后决定还是单独安装 ","prevPost":{"title":"Windows 调整之中文字体","link":"/posts/2023-09-29-windows-system-chinese-fonts-adjustment"},"nextPost":{"title":"笔记 - 像素的一生","link":"/posts/2024-02-29_像素的一生"},"headings":[{"title":"安装 msys2","rank":1,"id":"安装-msys2"},{"title":"软链接问题","rank":2,"id":"软链接问题"},{"title":"zsh + zi","rank":1,"id":"zsh-+-zi"},{"title":"zsh 的安装","rank":2,"id":"zsh-的安装"},{"title":"zi 的安装","rank":2,"id":"zi-的安装"},{"title":"zi 的配置与插件","rank":2,"id":"zi-的配置与插件"},{"title":"Windows Terminal 设置","rank":1,"id":"windows-terminal-设置"},{"title":"Vscode Terminal 设置","rank":1,"id":"vscode-terminal-设置"},{"title":"Mintty 设置","rank":1,"id":"mintty-设置"},{"title":"npm设置","rank":1,"id":"npm设置"},{"title":"conda 设置","rank":1,"id":"conda-设置"},{"title":"ssh配置共用","rank":2,"id":"ssh配置共用"},{"title":"参考","rank":1,"id":"参考"}]},"__N_SSG":true}