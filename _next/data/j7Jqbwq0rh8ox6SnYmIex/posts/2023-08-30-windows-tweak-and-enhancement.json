{"pageProps":{"meta":{"title":"Windows 调整之基础功能与常用插件","date":"2023-08-30 17:42","tags":["Windows"],"categories":"工具","description":null,"keywords":"Windows工具, 软件推荐, Windows调整，Windows设置，插件"},"mdxcode":"\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    a: \"a\",\n    code: \"code\",\n    del: \"del\",\n    h2: \"h2\",\n    li: \"li\",\n    ol: \"ol\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"自从感觉内存硬盘越来越不够用，以及对老黄的显卡需求，从 mac 换成了多年不见的 windows11 。做了非常多的调整，至现在基本稳定，记录下来以供参考。\"\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"基本调整与基础功能增强\",\n      children: \"基本调整与基础功能增强\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"右键菜单\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://nilesoft.org/download\",\n            children: \"shell\"\n          }), \"，恢复被藏到“更多选项”中的的右键菜单项，同时保持 win11 的设计风格。并且带有用 vscode 打开和用 windows Terminal 打开。虽然说 Windows Terminal 自己也有一个“用终端打开”，但那个有 Bug，打开的目录会被两个程序同时占用句柄，导致无法对目录本身进行操作。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"批量重命名\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://learn.microsoft.com/en-us/windows/powertoys/\",\n            children: \"Powertoys\"\n          }), \" 中的 PowerRename，可选中多个文件后右键批量重命名，整理素材时太有用了。大致与 mac 的多文件重命名相同。缺点是不能改成 \", _jsx(_components.code, {\n            children: \"同名称 + 编号\"\n          }), \" 。但系统自带的重命名恰好只能同名编号。Powertoys 有很多别的小工具，但都不够好用，按需关掉。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"快速预览\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://github.com/QL-Win/QuickLook\",\n            children: \"QL-Win/QuickLook\"\n          }), \" ，选中文件后按空格直接预览，再按空格关闭。对于看各种后缀的文本文件、zip 压缩包目录结构非常有用。也用了 mac 后没法割舍的一个功能。前面说的 Powertoys 也有，但快捷键一定要加 ctrl（真的难按），功能更少，图片不能显示大小，无法定制。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"文件快速搜索\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://www.voidtools.com/\",\n            children: \"Everything\"\n          }), \"，我大部分使用场景是在卸载程序后，清除残留的下载数据与用户数据。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"快速启动/全局搜索\"\n          })\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"使用 Listary\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"优化合集\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.a, {\n            href: \"https://github.com/hellzerg/optimizer\",\n            children: \"hellzerg/optimizer\"\n          }), \" 微调 windows 的合集程序，包括禁止系统更新、改 hosts 文件刷新 DNS、移除开机启动项、添加自定义右键菜单等。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"历史剪贴板\"\n          }), \"：在 \", _jsx(_components.code, {\n            children: \"设置→系统→剪贴板\"\n          }), \" 中启用。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"屏幕颜色配置文件(ICC Profile)\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"在 \", _jsx(_components.code, {\n            children: \"设置→屏幕→显示配置文件\"\n          }), \" 中，换成对应屏幕的sRGB文件。否则对于广色域屏幕，某些不读 ICC Profile 的照片查看器会出现色彩过饱和的情况。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"输入法\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"微软输入法需要改成回车时键入英文，否则会清空，不方便中英混输。不过作为一个五笔用户，我现在使用的是基于 Rime 的 \", _jsx(_components.a, {\n            href: \"http://98wb.ysepan.com/\",\n            children: \"98五笔输入法\"\n          }), \" 和 \", _jsx(_components.a, {\n            href: \"https://github.com/Sansui233/98wubi\",\n            children: \"我的配置\"\n          }), \"。\", _jsx(_components.del, {\n            children: \"因为微软输入法 shift 加 空格会标点变全角，而这个功能在中英混输时非常容易触发，还不能改掉，实在太弱智了\"\n          })]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"关闭顶部自动布局\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"关闭 \", _jsx(_components.code, {\n            children: \"系统→多任务处理→贴靠窗口\"\n          }), \"。此功能乍一看非常贴心，实则非常容易阻碍鼠标精准排列窗口，尤其是想把上沿拉到顶部时。不建议使用鼠标时开启，更适合手指操控设备。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"多线程下载器\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://aria2.github.io/\",\n            children: \"aria2\"\n          }), \"，在网上抄了一个配置文件，并且让 chatgpt 写了一个开机自启脚本。面板使用的是 Chrome 插件 \", _jsx(_components.a, {\n            href: \"https://chrome.google.com/webstore/detail/mpkodccbngfoacfalldjimigbofkhgjn\",\n            children: \"Aria2 Explorer\"\n          }), \"，考虑到都是在浏览器中下载，没必要使用独立的客户端 App。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"与手机互传文件\"\n          }), \"（折腾但稳定版）\"]\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://github.com/alist-org/alist\",\n            children: \"alist\"\n          }), \" 进行磁盘目录映射，并且使用 \", _jsx(_components.a, {\n            href: \"https://github.com/jeessy2/ddns-go/wiki\",\n            children: \"DDNS-Go\"\n          }), \" 动态绑定本机的 ipv6 地址到公网。手机上将相应的 alist 页面添加到主屏幕，便可在该页面互传文件。好处是能走局域网，速度快，不同网络环境下可用，可远程传输等等。依然让 chatgpt 写脚本将两个程序加入开机启动。\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"硬件调整\",\n      children: \"硬件调整\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"硬件信息监测\"\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用\", _jsx(_components.a, {\n            href: \"https://www.hwinfo.com/\",\n            children: \"hwinfo\"\n          }), \"的实时监测数据作为硬件调整的基准\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"功耗/风扇转速调整\"\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"使用 \", _jsx(_components.a, {\n            href: \"https://github.com/seerge/g-helper\",\n            children: \"g-helper\"\n          }), \" 调整日常使用的风扇曲线。我买的幻16，作为全能本，出厂的奥创调教特别垃，首发时还有bug。它的三种模式\"]\n        }), \"\\n\", _jsxs(_components.ol, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"静音模式风扇完全不转，经常温度突然飙升很吵地转一会儿\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"性能模式开什么都以游戏本的方式转，对我来说挺吵的\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"增强模式的声音不是给人用的。\"\n          }), \"\\n\"]\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"如果用windows默认电源管理方案的话，似乎和程序资源占用有关，即使只有60度也给转上4000转。打个小游戏真的不配这么吵……\"\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"后面用g-helper关闭睿频，功耗限制35w。测下来开原神默认高画质 1080p 稳定在CPU 65度，风扇3500转，不卡。这代 GPU 的散热反而问题不大，至少玩原神不会超过60度。然后测试了带光影的 Minecraft 1.20.1。MC 对 CPU 的要求更高，不过单机的话，不刻意刷红石，35w也够了，一般在25w左右，温度还是差不多的65度，全程电压没有超过1V，降压对于控温还是很有用的。奥创之所以动不动就吵就是因为一开性能模式，什么都不干电压给到1.8V……没必要，真的没必要。\"\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"日常使用场景下，好像也就编译比较耗CPU，其他时候都用不到很好的CPU性能。图形处理还是占GPU更多。音乐制作一类的也是耗CPU但也还好，但更耗内存硬盘。\"\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"音频调整\",\n      children: \"音频调整\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: _jsx(_components.a, {\n              href: \"https://sourceforge.net/projects/equalizerapo/files/\",\n              children: \"Equalizer APO\"\n            })\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"调全局声音的均衡，需要搭配 \", _jsx(_components.a, {\n            href: \"https://github.com/jaakkopasanen/AutoEq\",\n            children: \"Autoeq\"\n          }), \" 仓库中说的 peace 插件使用（现在好像直接叫autoeq.app）。耳机发烧友的必备。注意蓝牙耳机无法使用卷积eq。\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsxs(_components.strong, {\n            children: [\"内录用虚拟声卡：\", _jsx(_components.a, {\n              href: \"https://vb-audio.com/Cable/\",\n              children: \"VBCABLE_Driver\"\n            })]\n          })\n        }), \"\\n\", _jsx(_components.p, {\n          children: \"网上有很多教程，为轻量级内录解决方案。另外如果系统带有 xbox，用 xbox 的录制视频是默认走的内录。\"\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"降低 Midi 键盘延迟\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"键盘连接电脑练琴，无独立声卡时，可用 \", _jsx(_components.a, {\n            href: \"https://asio4all.org/\",\n            children: \"ASIO4ALL\"\n          }), \" 降低延迟。效果显著。缺点是 ASIO 是设备独占的，比如宿主软件使用 ASIO 到耳机，那看 b 站视频就只能外放（或者别的耳机/音响）。\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","excerpt":" 自从感觉内存硬盘越来越不够用，以及对老黄的显卡需求，从 mac 换成了多年不见的 windows11 。做了非常多的调整，至现在基本稳定，记录下来以供参考。  ## 基本调整与基础功能增强  - **右键菜单**       使用 [shell](https://nilesoft.or","prevPost":{"title":"Minecraft v1.20.1 常用设置","link":"/posts/2023-09-26-minecraft-settings-for-v1-20"},"nextPost":{"title":"Markdown 测试","link":"/posts/markdowntest"},"headings":[{"title":"基本调整与基础功能增强","rank":1,"id":"基本调整与基础功能增强"},{"title":"硬件调整","rank":1,"id":"硬件调整"},{"title":"音频调整","rank":1,"id":"音频调整"}]},"__N_SSG":true}